nohup: ignoring input
2022-06-11 11:10:30.178460: I tensorflow/core/tpu/tpu_api_dlsym_initializer.cc:116] Libtpu path is: libtpu.so
Missing key: 'TWIST' in 'tpu-env' (yaml) instance metadata.
2022-06-11 11:10:31.795135: I tensorflow/core/platform/cpu_feature_guard.cc:193] This TensorFlow binary is optimized with oneAPI Deep Neural Network Library (oneDNN) to use the following CPU instructions in performance-critical operations:  SSE3 SSE4.1 SSE4.2 AVX AVX2 AVX512F FMA
To enable them in other operations, rebuild TensorFlow with the appropriate compiler flags.
2022-06-11 11:10:34.925387: I tensorflow/compiler/xla/service/service.cc:170] XLA service 0x56c5980 initialized for platform TPU (this does not guarantee that XLA will be used). Devices:
2022-06-11 11:10:34.925441: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (0): TPU, 2a886c8
2022-06-11 11:10:34.925452: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (1): TPU, 2a886c8
2022-06-11 11:10:34.925459: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (2): TPU, 2a886c8
2022-06-11 11:10:34.925465: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (3): TPU, 2a886c8
2022-06-11 11:10:34.925472: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (4): TPU, 2a886c8
2022-06-11 11:10:34.925478: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (5): TPU, 2a886c8
2022-06-11 11:10:34.925485: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (6): TPU, 2a886c8
2022-06-11 11:10:34.925492: I tensorflow/compiler/xla/service/service.cc:178]   StreamExecutor device (7): TPU, 2a886c8
WARNING:absl:`tf.distribute.experimental.TPUStrategy` is deprecated, please use  the non experimental symbol `tf.distribute.TPUStrategy` instead.
2022-06-11 11:10:41.075336: I tensorflow/compiler/mlir/tensorflow/utils/dump_mlir_util.cc:263] disabling MLIR crash reproducer, set env var `MLIR_CRASH_REPRODUCER_DIRECTORY` to enable.
2022-06-11 11:10:41.097346: I tensorflow/compiler/jit/xla_compilation_cache.cc:478] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.
2022-06-11 11:10:41.112809: W tensorflow/compiler/tf2xla/kernels/random_ops.cc:57] Warning: Using tf.random.uniform with XLA compilation will ignore seeds; consider using tf.random.stateless_uniform instead if reproducible behavior is desired. RandomUniform
Model: "model"
__________________________________________________________________________________________________
 Layer (type)                   Output Shape         Param #     Connected to                     
==================================================================================================
 input_1 (InputLayer)           [(None, 550, 6)]     0           []                               
                                                                                                  
 conv1d (Conv1D)                (None, 550, 64)      1216        ['input_1[0][0]']                
                                                                                                  
 concatenate (Concatenate)      (None, 550, 70)      0           ['conv1d[0][0]',                 
                                                                  'input_1[0][0]']                
                                                                                                  
 dense (Dense)                  (None, 550, 32)      2272        ['concatenate[0][0]']            
                                                                                                  
 leaky_re_lu (LeakyReLU)        (None, 550, 32)      0           ['dense[0][0]']                  
                                                                                                  
 conv1d_1 (Conv1D)              (None, 550, 128)     20608       ['leaky_re_lu[0][0]']            
                                                                                                  
 concatenate_1 (Concatenate)    (None, 550, 160)     0           ['conv1d_1[0][0]',               
                                                                  'leaky_re_lu[0][0]']            
                                                                                                  
 dense_1 (Dense)                (None, 550, 64)      10304       ['concatenate_1[0][0]']          
                                                                                                  
 conv1d_2 (Conv1D)              (None, 550, 128)     41088       ['dense_1[0][0]']                
                                                                                                  
 concatenate_2 (Concatenate)    (None, 550, 192)     0           ['conv1d_2[0][0]',               
                                                                  'dense_1[0][0]']                
                                                                                                  
 dense_2 (Dense)                (None, 550, 128)     24704       ['concatenate_2[0][0]']          
                                                                                                  
 conv1d_3 (Conv1D)              (None, 550, 128)     82048       ['dense_2[0][0]']                
                                                                                                  
 add (Add)                      (None, 550, 128)     0           ['conv1d_3[0][0]',               
                                                                  'dense_2[0][0]']                
                                                                                                  
 conv1d_4 (Conv1D)              (None, 550, 128)     82048       ['add[0][0]']                    
                                                                                                  
 add_1 (Add)                    (None, 550, 128)     0           ['conv1d_4[0][0]',               
                                                                  'add[0][0]']                    
                                                                                                  
 conv1d_5 (Conv1D)              (None, 550, 128)     82048       ['add_1[0][0]']                  
                                                                                                  
 add_2 (Add)                    (None, 550, 128)     0           ['conv1d_5[0][0]',               
                                                                  'add_1[0][0]']                  
                                                                                                  
 conv1d_6 (Conv1D)              (None, 550, 128)     82048       ['add_2[0][0]']                  
                                                                                                  
 add_3 (Add)                    (None, 550, 128)     0           ['conv1d_6[0][0]',               
                                                                  'add_2[0][0]']                  
                                                                                                  
 conv1d_7 (Conv1D)              (None, 550, 128)     82048       ['add_3[0][0]']                  
                                                                                                  
 add_4 (Add)                    (None, 550, 128)     0           ['conv1d_7[0][0]',               
                                                                  'add_3[0][0]']                  
                                                                                                  
 dense_3 (Dense)                (None, 550, 32)      4128        ['add_4[0][0]']                  
                                                                                                  
 leaky_re_lu_1 (LeakyReLU)      (None, 550, 32)      0           ['dense_3[0][0]']                
                                                                                                  
 dense_4 (Dense)                (None, 550, 16)      528         ['leaky_re_lu_1[0][0]']          
                                                                                                  
 leaky_re_lu_2 (LeakyReLU)      (None, 550, 16)      0           ['dense_4[0][0]']                
                                                                                                  
 tf.__operators__.getitem (Slic  (550, 6)            0           ['input_1[0][0]']                
 ingOpLambda)                                                                                     
                                                                                                  
 input_2 (InputLayer)           [(None, 2)]          0           []                               
                                                                                                  
 flatten (Flatten)              (None, 8800)         0           ['leaky_re_lu_2[0][0]']          
                                                                                                  
 reshape (Reshape)              (550, 6)             0           ['tf.__operators__.getitem[0][0]'
                                                                 ]                                
                                                                                                  
 concatenate_3 (Concatenate)    (550, 8808)          0           ['input_2[0][0]',                
                                                                  'flatten[0][0]',                
                                                                  'reshape[0][0]']                
                                                                                                  
 dense_5 (Dense)                (550, 512)           4510208     ['concatenate_3[0][0]']          
                                                                                                  
 leaky_re_lu_3 (LeakyReLU)      (550, 512)           0           ['dense_5[0][0]']                
                                                                                                  
 dense_6 (Dense)                (550, 512)           262656      ['leaky_re_lu_3[0][0]']          
                                                                                                  
 leaky_re_lu_4 (LeakyReLU)      (550, 512)           0           ['dense_6[0][0]']                
                                                                                                  
 dense_7 (Dense)                (550, 512)           262656      ['leaky_re_lu_4[0][0]']          
                                                                                                  
 leaky_re_lu_5 (LeakyReLU)      (550, 512)           0           ['dense_7[0][0]']                
                                                                                                  
 dense_8 (Dense)                (550, 512)           262656      ['leaky_re_lu_5[0][0]']          
                                                                                                  
 leaky_re_lu_6 (LeakyReLU)      (550, 512)           0           ['dense_8[0][0]']                
                                                                                                  
 dense_9 (Dense)                (550, 2)             1024        ['leaky_re_lu_6[0][0]']          
                                                                                                  
==================================================================================================
Total params: 5,814,288
Trainable params: 5,814,288
Non-trainable params: 0
__________________________________________________________________________________________________
warmup...
Traceback (most recent call last):
  File "tx_small.py", line 586, in <module>
    agent.train(num_steps = n, envs = envs, warmup = n, log_interval = n, train_steps_per_step=1)
  File "tx_small.py", line 419, in train
    actions = self.select_actions(states_1, states_2)
  File "tx_small.py", line 282, in select_actions
    ret = strategy.run(self.model_call, args = (inp,))
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/distribute/tpu_strategy.py", line 721, in run
    return self.extended.tpu_run(fn, args, kwargs, options)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/distribute/tpu_strategy.py", line 1553, in tpu_run
    return func(args, kwargs)
  File "/usr/local/lib/python3.8/dist-packages/tensorflow/python/util/traceback_utils.py", line 153, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/tmp/__autograph_generated_filec3jiwta0.py", line 147, in tf__tpu_function
    replicate_outputs = ag__.converted_call(ag__.ld(tpu).replicate, (ag__.ld(replicated_fn), ag__.ld(replicate_inputs)), dict(device_assignment=ag__.ld(self)._device_assignment, maximum_shapes=ag__.ld(maximum_shapes), padding_spec=ag__.ld(padding_spec), xla_options=ag__.ld(xla_options)), fscope)
  File "/tmp/__autograph_generated_filec3jiwta0.py", line 40, in replicated_fn
    ag__.ld(result)[0] = ag__.converted_call(ag__.ld(fn), tuple(ag__.ld(replica_args)), dict(**ag__.ld(replica_kwargs)), fscope_1)
  File "/tmp/__autograph_generated_fileryq2ga8q.py", line 13, in tf__model_call
    retval_ = ag__.converted_call(ag__.ld(tf).math.argmax, (ag__.converted_call(ag__.ld(self).model, ([ag__.ld(x1), ag__.ld(x2)],), None, fscope),), dict(axis=1), fscope)
  File "/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py", line 67, in error_handler
    raise e.with_traceback(filtered_tb) from None
  File "/usr/local/lib/python3.8/dist-packages/keras/backend.py", line 3313, in concatenate
    return tf.concat([to_dense(x) for x in tensors], axis)
ValueError: in user code:

    File "tx_small.py", line 264, in model_call  *
        return tf.math.argmax(self.model([x1,x2]), axis = 1)
    File "/usr/local/lib/python3.8/dist-packages/keras/utils/traceback_utils.py", line 67, in error_handler  **
        raise e.with_traceback(filtered_tb) from None
    File "/usr/local/lib/python3.8/dist-packages/keras/backend.py", line 3313, in concatenate
        return tf.concat([to_dense(x) for x in tensors], axis)

    ValueError: Exception encountered when calling layer "concatenate_3" (type Concatenate).
    
    Dimension 0 in both shapes must be equal, but are 4 and 550. Shapes are [4] and [550]. for '{{node model/concatenate_3/concat}} = ConcatV2[N=3, T=DT_FLOAT, Tidx=DT_INT32](model/Cast_1, model/flatten/Reshape, model/reshape/Reshape, model/concatenate_3/concat/axis)' with input shapes: [4,2], [4,8800], [550,6], [] and with computed input tensors: input[3] = <1>.
    
    Call arguments received by layer "concatenate_3" (type Concatenate):
      • inputs=['tf.Tensor(shape=(4, 2), dtype=float32)', 'tf.Tensor(shape=(4, 8800), dtype=float32)', 'tf.Tensor(shape=(550, 6), dtype=float32)']

